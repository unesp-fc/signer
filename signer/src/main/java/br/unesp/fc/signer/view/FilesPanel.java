package br.unesp.fc.signer.view;

import br.unesp.fc.signer.model.FileListModel;
import br.unesp.fc.signer.model.FileModel;
import br.unesp.fc.signer.model.SelectedFileModel;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.TransferHandler;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class FilesPanel extends javax.swing.JPanel {

    private FileListModel fileListModel;
    private SelectedFileModel selectedFileModel;

    /**
     * Creates new form FilesPanel
     */
    public FilesPanel() {
        initComponents();
        btnRemove.setEnabled(false);
        lstFiles.setCellRenderer(new FileCellRenderer());
        lstFiles.setTransferHandler(new TransferHandler() {
            @Override
            public boolean canImport(TransferHandler.TransferSupport support) {
                for (DataFlavor flavor : support.getDataFlavors()) {
                    if (flavor.isFlavorJavaFileListType()) {
                        return true;
                    }
                }
                return false;
            }

            @Override
            public boolean importData(TransferHandler.TransferSupport support) {
                try {
                    var files = (List<File>) support.getTransferable()
                            .getTransferData(DataFlavor.javaFileListFlavor);
                    fileListModel.addFiles(files);
                } catch (UnsupportedFlavorException | IOException ex) {
                    Logger.getLogger(FilesPanel.class.getName()).log(Level.SEVERE, null, ex);
                    return false;
                }
                return true;
            }
        });
    }

    @Autowired
    public void setFileListModel(FileListModel fileListModel) {
        this.fileListModel = fileListModel;
        lstFiles.setModel(this.fileListModel);
        lstFiles.setEnabled(true);
    }

    @Autowired
    public void setSelectedFileModel(SelectedFileModel selectedFileModel) {
        this.selectedFileModel = selectedFileModel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstFiles = new javax.swing.JList<>();
        btnRemove = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();

        lstFiles.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstFilesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstFiles);

        btnRemove.setFont(MaterialSymbols.getFont(20));
        btnRemove.setForeground(LafColors.ALERT);
        btnRemove.setText(MaterialSymbols.REMOVE);
        btnRemove.setToolTipText("Remover");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnAdicionar.setFont(MaterialSymbols.getFont(20));
        btnAdicionar.setText(MaterialSymbols.ADD);
        btnAdicionar.setToolTipText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(171, Short.MAX_VALUE)
                .addComponent(btnAdicionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemove)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove)
                    .addComponent(btnAdicionar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        fileListModel.removeFiles(lstFiles.getSelectedValuesList());
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        var jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setFileFilter(new FileNameExtensionFilter("Arquivos PDF", "pdf"));
        jfc.setMultiSelectionEnabled(true);
        int ret = jfc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            try {
                fileListModel.addFiles(Arrays.asList(jfc.getSelectedFiles()));
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void lstFilesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstFilesValueChanged
        selectedFileModel.setFileModel(lstFiles.getSelectedValue());
        btnRemove.setEnabled(lstFiles.getSelectedIndices().length > 0);
    }//GEN-LAST:event_lstFilesValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<FileModel> lstFiles;
    // End of variables declaration//GEN-END:variables

    public static void main(String arg[]) throws IOException {
        br.unesp.fc.signer.Signer.setup();
        var panel = new FilesPanel();
        panel.setFileListModel(new FileListModel());
        javax.swing.SwingUtilities.invokeLater(() -> {
            var frame = new javax.swing.JFrame();
            frame.add(panel);
            frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
            frame.setPreferredSize(new java.awt.Dimension(1024, 768));
            frame.pack();
            frame.setVisible(true);
        });
    }

}
